{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nvar Polygon = React.createClass({\n  displayName: \"Polygon\",\n  _animateCircle: function _animateCircle() {\n    this.props.structure.cursor('voronoi').cursor(this.props.id).update(function () {\n      return 'active';\n    }); // this.props.pubsub.emit('animate', this.props.id);\n  },\n  _restoreCircle: function _restoreCircle() {\n    this.props.structure.cursor('voronoi').cursor(this.props.id).update(function () {\n      return 'inactive';\n    }); // this.props.pubsub.emit('restore', this.props.id);\n  },\n  _drawPath: function _drawPath(d) {\n    if (d === undefined) {\n      return;\n    }\n\n    return 'M' + d.join(',') + 'Z';\n  },\n  render: function render() {\n    return React.createElement(\"path\", {\n      onMouseOver: this._animateCircle,\n      onMouseOut: this._restoreCircle,\n      fill: \"white\",\n      opacity: \"0\",\n      d: this._drawPath(this.props.vnode)\n    });\n  }\n});\nmodule.exports = React.createClass({\n  displayName: 'Voronoi',\n  render: function render() {\n    var xScale = this.props.xScale;\n    var yScale = this.props.yScale;\n    var voronoi = d3.geom.voronoi().x(function (d) {\n      return xScale(d.coord.x);\n    }).y(function (d) {\n      return yScale(d.coord.y);\n    }).clipExtent([[0, 0], [this.props.width, this.props.height]]);\n    var regions = voronoi(this.props.data).map(function (vnode, idx) {\n      return React.createElement(Polygon, {\n        structure: this.props.structure,\n        key: idx,\n        id: vnode.point.id,\n        vnode: vnode\n      });\n    }.bind(this));\n    return React.createElement(\"g\", null, regions);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}