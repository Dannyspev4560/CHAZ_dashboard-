{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboardBody.js\";\nimport React from 'react';\nimport './DashboardBody.css';\nimport Progress from './DashboradBody/Progress';\nimport CycleGraph from './DashboradBody/CycleGraph';\nimport CycleTable from './DashboradBody/CycleTable';\nimport OvensView from './DashboradBody/OvensView.js';\nimport axios from 'axios';\nimport Title from './Title';\nimport FilterBar from './DashboradBody/FilterBar';\nimport JirasChart from './DashboradBody/JirasChart';\n\nvar DashboardBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DashboardBody, _React$Component);\n\n  function DashboardBody(props) {\n    var _this;\n\n    _classCallCheck(this, DashboardBody);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashboardBody).call(this, props));\n\n    _this.getDataFromDb = function () {\n      //TODO: my data is an array, so i need to iterate over the array using Array.prototype.map()- to work the right way.\n      axios.get('http://localhost:3002/api/cycles', {}).then(function (res) {\n        _this.setState({\n          table_data: res.data\n        });\n\n        console.log(_this.state.table_data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/executions', {}).then(function (res) {\n        _this.setState({\n          executions_data: res.data\n        });\n\n        console.log(_this.state.executions_data);\n      }).catch(function (error) {\n        console.log(error);\n      }); // axios.get('http://localhost:3002/api/chamber',{})\n      //     .then((res)=>{\n      //         this.setState({chamber_data:res.data});\n      //         console.log(this.state.chamber_data);\n      // })\n      //     .catch(function (error) {\n      //         console.log(error);\n      //     });\n      // axios.get('http://localhost:3002/api/ovenUtil',{})\n      //     .then((res)=>{\n      //         this.setState({setups_status:res.data});//here im returning res instead of res.data\n      //         console.log(this.state.setups_status);\n      //     })\n      //     .catch(function (error) {\n      //         console.log(error);\n      //     });\n\n      axios.get('http://localhost:3002/api/allOvens', {}).then(function (res) {\n        _this.setState({\n          ovens: res.data\n        }); //here im returning res instead of res.data\n\n\n        console.log(_this.state.ovens);\n\n        _this.Map_OvenData_ByName(); //removeLater\n\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/setupStatusesDeneb', {}).then(function (res) {\n        _this.setState({\n          ovenUtilsDeneb: res.data\n        }); //here im returning res instead of res.data\n\n\n        console.log(_this.state.ovenUtilsDeneb); //this.Map_OvenData_ByName();//removeLater\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/setupStatusesEnif', {}).then(function (res) {\n        _this.setState({\n          ovenUtilsEnif: res.data\n        }); //here im returning res instead of res.data\n\n\n        console.log(_this.state.ovenUtilsEnif);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/jiras', {}).then(function (res) {\n        _this.setState({\n          jiraData: res.data\n        }); //here im returning res instead of res.data\n        //console.log(this.state.jiraData);\n\n\n        var temp = res.data.map(function (obj) {\n          return obj.Issue_Key;\n        });\n        var mappedKeys = Object.entries(temp.reduce(function (prev, curr) {\n          return prev[curr] = ++prev[curr] || 1, prev;\n        }, {}));\n        var obj = ['Jiras', 'Count'];\n        var tempm = {};\n\n        for (var i in mappedKeys + 1) {\n          if (i == 0) {\n            tempm.push(obj);\n          } else {\n            tempm.push(mappedKeys[i - 1]);\n          }\n        }\n\n        console.log(tempm);\n        console.log(Object.assign(obj, mappedKeys));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.toDB = function (e) {\n      console.log(e);\n\n      for (var k in e) {\n        console.log(\"\".concat(k, \" : \").concat(e[k]));\n\n        if (k === \"Oven\") {\n          _this.setState({\n            Oven: e[k]\n          });\n\n          console.log(_this.state.Oven);\n        }\n\n        if (k === \"DB\") _this.setState({\n          DB: e[k]\n        });\n\n        if (e[k] === 0 || e[k] === \"\") {\n          _this.setState(function (prevState) {\n            return {\n              IsDataToServerOK: !prevState.IsDataToServerOK\n            };\n          });\n\n          return;\n        }\n      }\n\n      axios.post(\"http://localhost:3002/api/updateData\", {\n        id: 1,\n        body: {\n          message: e\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n        window.alert(error);\n      });\n\n      _this.setState({\n        IsDataToServerOK: true\n      });\n\n      _this.componentDidMount();\n    };\n\n    _this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      objectToUpdate: null,\n      loading: true,\n      table_data: [],\n      executions_data: [],\n      chamber_data: [],\n      setups_status: [],\n      activeIndex: null,\n      DB: [],\n      Oven: 0,\n      cycle: [],\n      ovens: [],\n      IsDataToServerOK: true,\n      ovenUtilsDeneb: [],\n      ovenUtilsEnif: [],\n      jiraData: []\n    };\n    _this.getDataFromDb = _this.getDataFromDb.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DashboardBody, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromDb();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getDataFromDb, 60000); //timeout currently one minute\n\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    }\n  }, {\n    key: \"Map_OvenData_ByName\",\n    value: function Map_OvenData_ByName() {\n      var mappedData = [];\n      var ovensState = this.state.ovens;\n      var ovensUtilDeneb = this.state.ovenUtilsDeneb;\n      var ovensUtilEnif = this.state.ovenUtilsEnif;\n\n      if (ovensState.length > 0 && ovensUtilDeneb.length > 0 && ovensUtilEnif.length > 0) {\n        var ovensUtil = ovensUtilDeneb.concat(ovensUtilEnif); //add in future more databases if needed\n\n        var ovenArr = ovensState.filter(function (obj) {\n          return obj.oven.toLowerCase().includes(\"ovn\");\n        });\n\n        for (var ovenArrIndex in ovenArr) {\n          for (var ovenUtilArrIndex = 0; ovenUtilArrIndex < ovensUtil.length; ovenUtilArrIndex++) {\n            for (var ovnUtilprop in ovensUtil[ovenUtilArrIndex]) {\n              if (ovnUtilprop == \"Name\") {\n                var nameStr = ovensUtil[ovenUtilArrIndex][ovnUtilprop].toLowerCase().replace(/e|rack|-|l|r/g, \"\");\n                var namestr2 = ovenArr[ovenArrIndex][\"oven\"].replace(\"-\", \"\").toLowerCase();\n\n                if (nameStr.includes(namestr2)) {\n                  var mappedObj = new Map();\n\n                  for (var tmpKey in ovensUtil[ovenUtilArrIndex]) {\n                    mappedObj.set(tmpKey, ovensUtil[ovenUtilArrIndex][tmpKey]);\n                  }\n\n                  for (var tmpKey_ in ovenArr[ovenArrIndex]) {\n                    mappedObj.set(tmpKey_, ovenArr[ovenArrIndex][tmpKey_]);\n                  }\n\n                  if (mappedData.filter(function (rackObj) {\n                    return rackObj.get(\"Name\") == mappedObj.get(\"Name\");\n                  }).length == 0) //check if doesnt exist already\n                    mappedData.push(mappedObj);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return mappedData;\n    }\n  }, {\n    key: \"ConvObjToArr_ovenData\",\n    value: function ConvObjToArr_ovenData() {\n      var mappedOvenData = new Map();\n\n      if (this.state.chamber_data.length > 0 && this.state.setups_status.length > 0) {\n        var chamber = this.state.chamber_data[0];\n        var setups = this.state.setups_status;\n\n        for (var k in chamber) {\n          mappedOvenData.set(k, chamber[k]);\n        }\n\n        var arr = [];\n        var cnt = 0;\n\n        for (var i = 0; i < setups.length; i++) {\n          for (var z in setups[i]) {\n            arr[cnt] = setups[i][z];\n\n            if (cnt === 1) {\n              mappedOvenData.set(arr[1], arr[0]);\n              cnt = 0;\n            } else {\n              cnt++;\n            }\n\n            ;\n          }\n        }\n      }\n\n      return mappedOvenData;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(FilterBar, {\n        data: this.state.ovens,\n        toDB: function toDB(e) {\n          return _this2.toDB(e);\n        },\n        IsDataToServerOK: this.state.IsDataToServerOK,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        data: this.state.executions_data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(CycleTable, {\n        data: this.state.table_data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(JirasChart, {\n        jiraData: this.state.jiraData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ovens\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(OvensView, {\n        ovensData: this.Map_OvenData_ByName(),\n        ovenNames: this.state.Oven,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DashboardBody;\n}(React.Component);\n\nexport default DashboardBody;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboardBody.js"],"names":["React","Progress","CycleGraph","CycleTable","OvensView","axios","Title","FilterBar","JirasChart","DashboardBody","props","getDataFromDb","get","then","res","setState","table_data","data","console","log","state","catch","error","executions_data","ovens","Map_OvenData_ByName","ovenUtilsDeneb","ovenUtilsEnif","jiraData","temp","map","obj","Issue_Key","mappedKeys","Object","entries","reduce","prev","curr","tempm","i","push","assign","toDB","e","k","Oven","DB","prevState","IsDataToServerOK","post","id","body","message","response","window","alert","componentDidMount","intervalIsSet","objectToUpdate","loading","chamber_data","setups_status","activeIndex","cycle","bind","interval","setInterval","clearInterval","mappedData","ovensState","ovensUtilDeneb","ovensUtilEnif","length","ovensUtil","concat","ovenArr","filter","oven","toLowerCase","includes","ovenArrIndex","ovenUtilArrIndex","ovnUtilprop","nameStr","replace","namestr2","mappedObj","Map","tmpKey","set","tmpKey_","rackObj","mappedOvenData","chamber","setups","arr","cnt","z","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './DashboardBody.css';\r\nimport Progress from './DashboradBody/Progress';\r\nimport CycleGraph from './DashboradBody/CycleGraph';\r\nimport CycleTable from './DashboradBody/CycleTable';\r\nimport OvensView from './DashboradBody/OvensView.js';\r\nimport axios from 'axios';\r\nimport Title from './Title';\r\nimport FilterBar from './DashboradBody/FilterBar';\r\nimport JirasChart from './DashboradBody/JirasChart';\r\n\r\n\r\nclass DashboardBody extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            id: 0,\r\n            message: null,\r\n            intervalIsSet: false,\r\n            objectToUpdate: null,\r\n            loading: true,\r\n            table_data: [],\r\n            executions_data:[],\r\n            chamber_data:[],\r\n            setups_status:[],\r\n            activeIndex: null,\r\n            DB:[],\r\n            Oven:0,\r\n            cycle:[],\r\n            ovens:[],\r\n            IsDataToServerOK:true,\r\n            ovenUtilsDeneb:[],\r\n            ovenUtilsEnif:[],\r\n            jiraData:[],\r\n        };\r\n\r\n        this.getDataFromDb = this.getDataFromDb.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDataFromDb();\r\n        if (!this.state.intervalIsSet) {\r\n            let interval = setInterval(this.getDataFromDb, 60000);//timeout currently one minute\r\n            this.setState({ intervalIsSet: interval });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.intervalIsSet) {\r\n            clearInterval(this.state.intervalIsSet);\r\n            this.setState({ intervalIsSet: null });\r\n        }\r\n    }\r\n\r\n\r\n    getDataFromDb = ()=> {\r\n        //TODO: my data is an array, so i need to iterate over the array using Array.prototype.map()- to work the right way.\r\n\r\n        axios.get('http://localhost:3002/api/cycles', {})\r\n            .then((res) => {\r\n                this.setState({table_data: res.data});\r\n                console.log(this.state.table_data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get('http://localhost:3002/api/executions', {})\r\n            .then((res) => {\r\n                this.setState({executions_data: res.data});\r\n                console.log(this.state.executions_data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        // axios.get('http://localhost:3002/api/chamber',{})\r\n        //     .then((res)=>{\r\n        //         this.setState({chamber_data:res.data});\r\n        //         console.log(this.state.chamber_data);\r\n        // })\r\n        //     .catch(function (error) {\r\n        //         console.log(error);\r\n        //     });\r\n            // axios.get('http://localhost:3002/api/ovenUtil',{})\r\n            //     .then((res)=>{\r\n            //         this.setState({setups_status:res.data});//here im returning res instead of res.data\r\n            //         console.log(this.state.setups_status);\r\n            //     })\r\n            //     .catch(function (error) {\r\n            //         console.log(error);\r\n            //     });\r\n        axios.get('http://localhost:3002/api/allOvens',{})\r\n            .then((res)=>{\r\n                this.setState({ovens:res.data});//here im returning res instead of res.data\r\n                console.log(this.state.ovens);\r\n                this.Map_OvenData_ByName();//removeLater\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get('http://localhost:3002/api/setupStatusesDeneb',{})\r\n            .then((res)=>{\r\n                this.setState({ovenUtilsDeneb:res.data});//here im returning res instead of res.data\r\n                console.log(this.state.ovenUtilsDeneb);\r\n                //this.Map_OvenData_ByName();//removeLater\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get('http://localhost:3002/api/setupStatusesEnif',{})\r\n            .then((res)=>{\r\n                this.setState({ovenUtilsEnif:res.data});//here im returning res instead of res.data\r\n                console.log(this.state.ovenUtilsEnif);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get('http://localhost:3002/api/jiras',{})\r\n            .then((res)=>{\r\n                this.setState({jiraData:res.data});//here im returning res instead of res.data\r\n                //console.log(this.state.jiraData);\r\n                var temp=res.data.map(obj=>obj.Issue_Key);\r\n                var mappedKeys=Object.entries(temp.reduce((prev, curr) => (prev[curr] = ++prev[curr] || 1, prev), {}));\r\n\r\n                var obj=['Jiras','Count'];\r\n                var tempm={};\r\n                for(var i in mappedKeys+1)\r\n                {\r\n                    if (i==0){\r\n                        tempm.push(obj);\r\n                    }\r\n                    else {\r\n                        tempm.push(mappedKeys[i-1]);\r\n                    }\r\n                }\r\n                console.log(tempm);\r\n\r\n                console.log(Object.assign(obj,mappedKeys));\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n\r\n    toDB = (e)=>{\r\n      console.log(e);\r\n      for (var k in e){\r\n          console.log(`${k} : ${e[k]}`);\r\n          if (k===\"Oven\"){\r\n              this.setState({Oven:e[k]});\r\n              console.log(this.state.Oven)\r\n          }\r\n          if(k===\"DB\")\r\n              this.setState({DB:e[k]});\r\n          if (e[k]===0 || e[k]===\"\")\r\n          {\r\n              this.setState(prevState => ({\r\n                  IsDataToServerOK: !prevState.IsDataToServerOK\r\n              }))\r\n              return;\r\n          }\r\n      }\r\n        axios.post(\"http://localhost:3002/api/updateData\", {\r\n            id: 1,\r\n            body: { message: e }\r\n        }).then(function (response) {\r\n            console.log(response);\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                window.alert(error);\r\n            });\r\n      this.setState({IsDataToServerOK:true});\r\n      this.componentDidMount();\r\n    };\r\n\r\n    Map_OvenData_ByName(){\r\n        var mappedData=[];\r\n        const ovensState=this.state.ovens;\r\n        const ovensUtilDeneb=this.state.ovenUtilsDeneb;\r\n        const ovensUtilEnif=this.state.ovenUtilsEnif;\r\n\r\n        if (ovensState.length>0&&ovensUtilDeneb.length>0&&ovensUtilEnif.length>0){\r\n                const ovensUtil=ovensUtilDeneb.concat(ovensUtilEnif);//add in future more databases if needed\r\n               const ovenArr= ovensState.filter(obj=>obj.oven.toLowerCase().includes(\"ovn\"));\r\n\r\n\r\n               for(var ovenArrIndex in ovenArr){\r\n\r\n                   for (var ovenUtilArrIndex=0;ovenUtilArrIndex<ovensUtil.length;ovenUtilArrIndex++)\r\n                   {\r\n                       for( var ovnUtilprop in ovensUtil[ovenUtilArrIndex]){\r\n                           if (ovnUtilprop==\"Name\") {\r\n                               var nameStr = ovensUtil[ovenUtilArrIndex][ovnUtilprop].toLowerCase().replace(/e|rack|-|l|r/g, \"\");\r\n                               var namestr2 = ovenArr[ovenArrIndex][\"oven\"].replace(\"-\", \"\").toLowerCase();\r\n                               if (nameStr.includes(namestr2)) {\r\n\r\n                                   var mappedObj=new Map();\r\n                                   for (var tmpKey in ovensUtil[ovenUtilArrIndex]){\r\n                                       mappedObj.set(tmpKey,ovensUtil[ovenUtilArrIndex][tmpKey])\r\n                                   }\r\n                                   for (var tmpKey_ in ovenArr[ovenArrIndex])\r\n                                   {\r\n                                       mappedObj.set(tmpKey_,ovenArr[ovenArrIndex][tmpKey_])\r\n                                   }\r\n\r\n                                   if(mappedData.filter(rackObj=>rackObj.get(\"Name\")==mappedObj.get(\"Name\")).length==0)//check if doesnt exist already\r\n                                   mappedData.push(mappedObj);\r\n                               }\r\n                           }\r\n                       }\r\n\r\n                   }\r\n\r\n               }\r\n        }\r\n        return mappedData\r\n    }\r\n\r\n    ConvObjToArr_ovenData(){\r\n        var mappedOvenData=new Map();\r\n        if (this.state.chamber_data.length>0 && this.state.setups_status.length>0){\r\n            const chamber=this.state.chamber_data[0];\r\n            const setups=this.state.setups_status;\r\n            for(var k in chamber )\r\n            {\r\n                mappedOvenData.set(k,chamber[k])\r\n            }\r\n            let arr=[];\r\n            let cnt=0;\r\n            for(let i=0;i<setups.length;i++)\r\n            {\r\n\r\n                for(var z in setups[i] ){\r\n                    arr[cnt]=setups[i][z];\r\n                    if(cnt===1){\r\n                        mappedOvenData.set(arr[1],arr[0]);\r\n                        cnt=0;\r\n                    }\r\n                    else{cnt++};\r\n                }\r\n            }\r\n        }\r\n        return mappedOvenData;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"grid-container\">\r\n                <div className=\"header\">\r\n                    <div className=\"\">\r\n                        <h1><Title/></h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sidebar\">\r\n                   <FilterBar data={this.state.ovens} toDB={(e)=>this.toDB(e)} IsDataToServerOK={this.state.IsDataToServerOK}/>\r\n                </div>\r\n                <div className=\"dash\">\r\n                        <div className=\"status\">\r\n                            <Progress data={this.state.executions_data}/>\r\n                        </div>\r\n                        <div className=\"table\">\r\n                            <CycleTable data={this.state.table_data}/>\r\n                            {/*{postView}*/}\r\n                        </div>\r\n                        <div className=\"stats\">\r\n                            <JirasChart jiraData={this.state.jiraData}/>\r\n                        </div>\r\n\r\n                        <div className=\"ovens\">\r\n                            <OvensView  ovensData={this.Map_OvenData_ByName()} ovenNames={this.state.Oven}/>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DashboardBody;"]},"metadata":{},"sourceType":"module"}