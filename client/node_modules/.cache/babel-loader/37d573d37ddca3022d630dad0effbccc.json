{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboradBody\\\\OvensView.js\";\nimport React from 'react';\nimport './OvensView.css';\nimport OvenItem from './OvenItem';\n\nvar OvensView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OvensView, _React$Component);\n\n  function OvensView() {\n    _classCallCheck(this, OvensView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OvensView).apply(this, arguments));\n  }\n\n  _createClass(OvensView, [{\n    key: \"MapOvenItems\",\n    value: function MapOvenItems(ovenNamerArr, dataArr) {\n      //console.log(ovenNamerArr);\n      var ovenItems = [];\n\n      if (ovenNamerArr.length > 0) {\n        for (var ovenNameIndex in ovenNamerArr) {\n          for (var rackIndex in dataArr) {\n            if (dataArr[rackIndex].get(\"oven\") == ovenNamerArr[ovenNameIndex]) var check = ovenNamerArr[0];\n            console.log(check);\n            var tempArr = dataArr.filter(function (rackObj) {\n              return rackObj.get(\"oven\") == ovenNamerArr[ovenNameIndex];\n            });\n\n            if (tempArr.length == 2 && ovenItems.filter(function (rackObj) {\n              return rackObj.get(\"oven\") == ovenNamerArr[ovenNameIndex];\n            }).length == 0) {\n              var ovnMappedObj = new Map();\n              ovnMappedObj = tempArr[0];\n              ovnMappedObj.set(\"ReadyForSelfTest\", tempArr[0].get(\"ReadyForSelfTest\") + tempArr[1].get(\"ReadyForSelfTest\"));\n              ovnMappedObj.set(\"NotFound\", tempArr[0].get(\"NotFound\") + tempArr[1].get(\"NotFound\"));\n              ovnMappedObj.set(\"Available\", tempArr[0].get(\"Available\") + tempArr[1].get(\"Available\"));\n              ovnMappedObj.set(\"NotAvailable\", tempArr[0].get(\"NotAvailable\") + tempArr[1].get(\"NotAvailable\"));\n              ovnMappedObj.set(\"Found\", tempArr[0].get(\"Found\") + tempArr[1].get(\"Found\"));\n              ovnMappedObj.set(\"Name_\", tempArr[1]);\n              ovenItems.push(ovnMappedObj);\n            }\n          }\n        }\n\n        var view = ovenItems.map(function (obj) {\n          return React.createElement(OvenItem, {\n            data: obj,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          });\n        });\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, view);\n      } else return React.createElement(\"div\", {\n        className: \"ovensDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Please Choose oven\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //TODO :in case of having several oven items in need to use map\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.MapOvenItems(this.props.ovenNames, this.props.ovensData));\n    }\n  }]);\n\n  return OvensView;\n}(React.Component);\n\n;\nexport default OvensView;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboradBody\\OvensView.js"],"names":["React","OvenItem","OvensView","ovenNamerArr","dataArr","ovenItems","length","ovenNameIndex","rackIndex","get","check","console","log","tempArr","filter","rackObj","ovnMappedObj","Map","set","push","view","map","obj","MapOvenItems","props","ovenNames","ovensData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './OvensView.css'\r\nimport OvenItem from './OvenItem';\r\n\r\n\r\n\r\nclass OvensView extends React.Component{\r\n\r\n\r\n\r\n    MapOvenItems(ovenNamerArr,dataArr){\r\n        //console.log(ovenNamerArr);\r\n        var ovenItems=[];\r\n        if (ovenNamerArr.length>0){\r\n            for(var ovenNameIndex in ovenNamerArr) {\r\n                for (var rackIndex in  dataArr) {\r\n                    if (dataArr[rackIndex].get(\"oven\") == ovenNamerArr[ovenNameIndex])\r\n                        var check = ovenNamerArr[0];\r\n                    console.log(check);\r\n                    var tempArr = dataArr.filter(rackObj => rackObj.get(\"oven\") == ovenNamerArr[ovenNameIndex]);\r\n                    if (tempArr.length == 2 && ovenItems.filter(rackObj=>rackObj.get(\"oven\")==ovenNamerArr[ovenNameIndex]).length==0) {\r\n                        var ovnMappedObj = new Map();\r\n                        ovnMappedObj = tempArr[0];\r\n                        ovnMappedObj.set(\"ReadyForSelfTest\", tempArr[0].get(\"ReadyForSelfTest\") + tempArr[1].get(\"ReadyForSelfTest\"));\r\n                        ovnMappedObj.set(\"NotFound\", tempArr[0].get(\"NotFound\") + tempArr[1].get(\"NotFound\"));\r\n                        ovnMappedObj.set(\"Available\", tempArr[0].get(\"Available\") + tempArr[1].get(\"Available\"));\r\n                        ovnMappedObj.set(\"NotAvailable\", tempArr[0].get(\"NotAvailable\") + tempArr[1].get(\"NotAvailable\"));\r\n                        ovnMappedObj.set(\"Found\", tempArr[0].get(\"Found\") + tempArr[1].get(\"Found\"));\r\n                        ovnMappedObj.set(\"Name_\", tempArr[1]);\r\n                        ovenItems.push(ovnMappedObj);\r\n                    }\r\n                }\r\n            }\r\n            let view =ovenItems.map(obj=>{return(\r\n                <OvenItem  data={obj}/>\r\n            )});\r\n            return (\r\n                <div>\r\n                    {view}\r\n                </div>\r\n            )\r\n\r\n        }\r\n         else return (\r\n            <div className=\"ovensDisplay\">\r\n                <h2>Please Choose oven</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {//TODO :in case of having several oven items in need to use map\r\n\r\n\r\n        return (\r\n            <div  >\r\n               {this.MapOvenItems(this.props.ovenNames,this.props.ovensData)}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default OvensView;\r\n\r\n"]},"metadata":{},"sourceType":"module"}