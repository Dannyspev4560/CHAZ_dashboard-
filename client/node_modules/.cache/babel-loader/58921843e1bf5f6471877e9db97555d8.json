{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboradBody\\\\JirasChart.js\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\nimport Loader from \"../reusableComponents/Loader\";\n\nvar JirasChart = function JirasChart(props) {\n  function jiraChartCreator() {\n    if (props.jiraData.length > 0) {\n      var jiras = props.jiraData;\n      var mappedData = {};\n\n      for (var jiraIndex in jiras) {\n        if (mappedData.length > 0) {\n          for (var mappedDataIndex in mappedData) {\n            if (mappedData[mappedDataIndex][0] == jiras[jiraIndex].Issue_Key) {\n              mappedData[mappedDataIndex][1]++;\n              break;\n            }\n          }\n        }\n      }\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    width: '250px',\n    height: '200px',\n    chartType: \"BarChart\",\n    loader: React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }),\n    data: [['Jiras', 'Count'], ['SWIFT-5920', 4], ['SWIFT-10632', 3], ['SWIFT-8530', 2], ['SWIFT-8559', 2], ['SWIFT-10330', 1]],\n    options: {\n      color: 'red',\n      title: 'Jira count in presented cycles',\n      chartArea: {\n        width: '40%'\n      },\n      hAxis: {\n        minValue: 0\n      },\n      vAxis: {}\n    } // For tests\n    ,\n    rootProps: {\n      'data-testid': '1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n};\n\nexport default JirasChart;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboradBody\\JirasChart.js"],"names":["React","Chart","Loader","JirasChart","props","jiraChartCreator","jiraData","length","jiras","mappedData","jiraIndex","mappedDataIndex","Issue_Key","color","title","chartArea","width","hAxis","minValue","vAxis"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AACA,IAAMC,UAAU,GAAC,SAAXA,UAAW,CAACC,KAAD,EAAS;AAGtB,WAASC,gBAAT,GAA4B;AACxB,QAAGD,KAAK,CAACE,QAAN,CAAeC,MAAf,GAAsB,CAAzB,EAA2B;AACvB,UAAMC,KAAK,GAACJ,KAAK,CAACE,QAAlB;AACA,UAAIG,UAAU,GAAC,EAAf;;AACA,WAAI,IAAIC,SAAR,IAAqBF,KAArB,EACA;AACI,YAAGC,UAAU,CAACF,MAAX,GAAkB,CAArB,EAAwB;AACxB,eAAI,IAAII,eAAR,IAA2BF,UAA3B,EAAsC;AAClC,gBAAGA,UAAU,CAACE,eAAD,CAAV,CAA4B,CAA5B,KAAgCH,KAAK,CAACE,SAAD,CAAL,CAAiBE,SAApD,EAA8D;AAC1DH,cAAAA,UAAU,CAACE,eAAD,CAAV,CAA4B,CAA5B;AACA;AACC;AACJ;AACJ;AACJ;AACJ,KAdD,MAeK,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADC;AAMR;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAE,OADX;AAEI,IAAA,MAAM,EAAE,OAFZ;AAGI,IAAA,SAAS,EAAC,UAHd;AAII,IAAA,MAAM,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ;AAKI,IAAA,IAAI,EAAE,CACF,CAAC,OAAD,EAAS,OAAT,CADE,EAEF,CAAC,YAAD,EAAe,CAAf,CAFE,EAGF,CAAC,aAAD,EAAgB,CAAhB,CAHE,EAIF,CAAC,YAAD,EAAe,CAAf,CAJE,EAKF,CAAC,YAAD,EAAe,CAAf,CALE,EAMF,CAAC,aAAD,EAAgB,CAAhB,CANE,CALV;AAaI,IAAA,OAAO,EAAE;AACLE,MAAAA,KAAK,EAAC,KADD;AAELC,MAAAA,KAAK,EAAE,gCAFF;AAGLC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAHN;AAILC,MAAAA,KAAK,EAAE;AAEHC,QAAAA,QAAQ,EAAE;AAFP,OAJF;AAQLC,MAAAA,KAAK,EAAE;AARF,KAbb,CAyBI;AAzBJ;AA0BI,IAAA,SAAS,EAAE;AAAE,qBAAe;AAAjB,KA1Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAiCH,CA5DD;;AA8DA,eAAehB,UAAf","sourcesContent":["import React from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\nimport Loader from \"../reusableComponents/Loader\";\r\nconst JirasChart=(props)=>{\r\n\r\n\r\n    function jiraChartCreator() {\r\n        if(props.jiraData.length>0){\r\n            const jiras=props.jiraData;\r\n            var mappedData={};\r\n            for(var jiraIndex in jiras)\r\n            {\r\n                if(mappedData.length>0 ){\r\n                for(var mappedDataIndex in mappedData){\r\n                    if(mappedData[mappedDataIndex][0]==jiras[jiraIndex].Issue_Key){\r\n                        mappedData[mappedDataIndex][1]++;\r\n                        break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else return (\r\n            <div>\r\n                <Loader/>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return(\r\n        <div >\r\n            <Chart\r\n                width={'250px'}\r\n                height={'200px'}\r\n                chartType=\"BarChart\"\r\n                loader={<Loader/>}\r\n                data={[\r\n                    ['Jiras','Count'],\r\n                    ['SWIFT-5920', 4],\r\n                    ['SWIFT-10632', 3],\r\n                    ['SWIFT-8530', 2],\r\n                    ['SWIFT-8559', 2],\r\n                    ['SWIFT-10330', 1],\r\n                ]}\r\n                options={{\r\n                    color:'red',\r\n                    title: 'Jira count in presented cycles',\r\n                    chartArea: { width: '40%' },\r\n                    hAxis: {\r\n\r\n                        minValue: 0,\r\n                    },\r\n                    vAxis: {\r\n\r\n                    },\r\n                }}\r\n                // For tests\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JirasChart;"]},"metadata":{},"sourceType":"module"}