{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n  displayName: 'Arc',\n  propTypes: {\n    fill: React.PropTypes.string,\n    d: React.PropTypes.string,\n    startAngle: React.PropTypes.number,\n    endAngle: React.PropTypes.number,\n    innerRadius: React.PropTypes.number,\n    outerRadius: React.PropTypes.number,\n    labelTextFill: React.PropTypes.string,\n    valueTextFill: React.PropTypes.string,\n    sectorBorderColor: React.PropTypes.string,\n    showInnerLabels: React.PropTypes.bool,\n    showOuterLabels: React.PropTypes.bool\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      labelTextFill: 'black',\n      valueTextFill: 'white',\n      showInnerLabels: true,\n      showOuterLabels: true\n    };\n  },\n  render: function render() {\n    var props = this.props;\n    var arc = d3.svg.arc().innerRadius(props.innerRadius).outerRadius(props.outerRadius).startAngle(props.startAngle).endAngle(props.endAngle);\n    return React.createElement(\"g\", {\n      className: \"rd3-piechart-arc\"\n    }, React.createElement(\"path\", {\n      d: arc(),\n      fill: props.fill,\n      stroke: props.sectorBorderColor,\n      onMouseOver: props.handleMouseOver,\n      onMouseLeave: props.handleMouseLeave\n    }), props.showOuterLabels ? this.renderOuterLabel(props, arc) : null, props.showInnerLabels ? this.renderInnerLabel(props, arc) : null);\n  },\n  renderInnerLabel: function renderInnerLabel(props, arc) {\n    // make value text can be formatted\n    var formattedValue = props.valueTextFormatter(props.value);\n    return React.createElement(\"text\", {\n      className: \"rd3-piechart-value\",\n      transform: \"translate(\" + arc.centroid() + \")\",\n      dy: \".35em\",\n      style: {\n        'shapeRendering': 'crispEdges',\n        'textAnchor': 'middle',\n        'fill': props.valueTextFill\n      }\n    }, formattedValue);\n  },\n  renderOuterLabel: function renderOuterLabel(props, arc) {\n    var rotate = \"rotate(\" + (props.startAngle + props.endAngle) / 2 * (180 / Math.PI) + \")\";\n    var positions = arc.centroid();\n    var radius = props.outerRadius;\n    var dist = radius + 35;\n    var angle = (props.startAngle + props.endAngle) / 2;\n    var x = dist * (1.2 * Math.sin(angle));\n    var y = -dist * Math.cos(angle);\n    var t = \"translate(\" + x + \",\" + y + \")\";\n    return React.createElement(\"g\", null, React.createElement(\"line\", {\n      x1: \"0\",\n      x2: \"0\",\n      y1: -radius - 2,\n      y2: -radius - 26,\n      stroke: props.labelTextFill,\n      transform: rotate,\n      style: {\n        'fill': props.labelTextFill,\n        'strokeWidth': 2\n      }\n    }), React.createElement(\"text\", {\n      className: \"rd3-piechart-label\",\n      transform: t,\n      dy: \".35em\",\n      style: {\n        'textAnchor': 'middle',\n        'fill': props.labelTextFill,\n        'shapeRendering': 'crispEdges'\n      }\n    }, props.label));\n  }\n});","map":null,"metadata":{},"sourceType":"script"}