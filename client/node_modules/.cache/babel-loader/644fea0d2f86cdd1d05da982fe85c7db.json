{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nvar shade = require('../utils').shade;\n\nvar VoronoiCircle = require('./VoronoiCircle');\n\nmodule.exports = React.createClass({\n  displayName: 'VornoiCircleContainer',\n  propTypes: {\n    circleFill: React.PropTypes.string,\n    circleRadius: React.PropTypes.number,\n    circleRadiusMultiplier: React.PropTypes.number,\n    className: React.PropTypes.string,\n    hoverAnimation: React.PropTypes.bool,\n    shadeMultiplier: React.PropTypes.number,\n    vnode: React.PropTypes.array.isRequired\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      circleFill: '#1f77b4',\n      circleRadius: 3,\n      circleRadiusMultiplier: 1.25,\n      className: 'rd3-scatterchart-voronoi-circle-container',\n      hoverAnimation: true,\n      shadeMultiplier: 0.2\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      circleFill: this.props.circleFill,\n      circleRadius: this.props.circleRadius\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    this.setState({\n      circleFill: nextProps.circleFill,\n      circleRadius: nextProps.circleRadius\n    });\n  },\n  render: function render() {\n    var props = this.props;\n    var state = this.state;\n    return React.createElement(\"g\", {\n      className: props.className\n    }, React.createElement(VoronoiCircle, {\n      circleFill: state.circleFill,\n      circleRadius: state.circleRadius,\n      cx: props.cx,\n      cy: props.cy,\n      handleMouseLeave: this._restoreCircle,\n      handleMouseOver: this._animateCircle,\n      voronoiPath: this._drawPath(props.vnode)\n    }));\n  },\n  _animateCircle: function _animateCircle() {\n    var props = this.props;\n\n    if (props.hoverAnimation) {\n      this.setState({\n        circleFill: shade(props.circleFill, props.shadeMultiplier),\n        circleRadius: props.circleRadius * props.circleRadiusMultiplier\n      });\n    }\n  },\n  _restoreCircle: function _restoreCircle() {\n    var props = this.props;\n\n    if (props.hoverAnimation) {\n      this.setState({\n        circleFill: props.circleFill,\n        circleRadius: props.circleRadius\n      });\n    }\n  },\n  _drawPath: function _drawPath(d) {\n    if (typeof d === 'undefined') {\n      return 'M Z';\n    }\n\n    return 'M' + d.join(',') + 'Z';\n  }\n});","map":null,"metadata":{},"sourceType":"script"}