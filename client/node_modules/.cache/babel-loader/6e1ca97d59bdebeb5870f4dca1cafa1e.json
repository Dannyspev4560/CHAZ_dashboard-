{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboradBody\\\\JirasChart.js\";\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\nimport Loader from \"../reusableComponents/Loader\";\n\nvar JirasChart = function JirasChart(props) {\n  function jiraChartCreator() {\n    if (props.jiraData.length > 0) {\n      var mappedKeys = props.jiraData.map(function (obj) {\n        return obj.Issue_Key;\n      });\n      mappedKeys = mappedKeys.reduce(function (prev, curr) {\n        return prev[curr] = ++prev[curr] || 1, prev;\n      }, {});\n      var dataToChart = [];\n\n      for (var i in mappedKeys) {\n        if (i == 0) {\n          dataToChart.push(['Jiras', 'Count']);\n          dataToChart.push(mappedKeys[i]);\n        } else {\n          dataToChart.push(mappedKeys[i]);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        width: '250px',\n        height: '200px',\n        chartType: \"BarChart\",\n        loader: React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }),\n        data: dataToChart,\n        options: {\n          color: 'red',\n          title: 'Jira count in presented cycles',\n          chartArea: {\n            width: '40%'\n          },\n          hAxis: {\n            minValue: 0\n          },\n          vAxis: {}\n        } // For tests\n        ,\n        rootProps: {\n          'data-testid': '1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, jiraChartCreator());\n};\n\nexport default JirasChart;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboradBody\\JirasChart.js"],"names":["React","Chart","Loader","JirasChart","props","jiraChartCreator","jiraData","length","mappedKeys","map","obj","Issue_Key","reduce","prev","curr","dataToChart","i","push","color","title","chartArea","width","hAxis","minValue","vAxis"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AACA,IAAMC,UAAU,GAAC,SAAXA,UAAW,CAACC,KAAD,EAAS;AAGtB,WAASC,gBAAT,GAA4B;AACxB,QAAGD,KAAK,CAACE,QAAN,CAAeC,MAAf,GAAsB,CAAzB,EAA2B;AACvB,UAAIC,UAAU,GAACJ,KAAK,CAACE,QAAN,CAAeG,GAAf,CAAmB,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,SAAN;AAAA,OAAtB,CAAf;AACAH,MAAAA,UAAU,GAACA,UAAU,CAACI,MAAX,CAAkB,UAACC,IAAD,EAAOC,IAAP;AAAA,eAAiBD,IAAI,CAACC,IAAD,CAAJ,GAAa,EAAED,IAAI,CAACC,IAAD,CAAN,IAAgB,CAA7B,EAAgCD,IAAjD;AAAA,OAAlB,EAA0E,EAA1E,CAAX;AACA,UAAIE,WAAW,GAAC,EAAhB;;AACA,WAAI,IAAIC,CAAR,IAAaR,UAAb,EACA;AACI,YAAIQ,CAAC,IAAE,CAAP,EAAS;AACLD,UAAAA,WAAW,CAACE,IAAZ,CAAiB,CAAC,OAAD,EAAS,OAAT,CAAjB;AACAF,UAAAA,WAAW,CAACE,IAAZ,CAAiBT,UAAU,CAACQ,CAAD,CAA3B;AACH,SAHD,MAIK;AACDD,UAAAA,WAAW,CAACE,IAAZ,CAAiBT,UAAU,CAACQ,CAAD,CAA3B;AACH;AACJ;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE,OADX;AAEI,QAAA,MAAM,EAAE,OAFZ;AAGI,QAAA,SAAS,EAAC,UAHd;AAII,QAAA,MAAM,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJZ;AAKI,QAAA,IAAI,EAAED,WALV;AAMI,QAAA,OAAO,EAAE;AACLG,UAAAA,KAAK,EAAC,KADD;AAELC,UAAAA,KAAK,EAAE,gCAFF;AAGLC,UAAAA,SAAS,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAHN;AAILC,UAAAA,KAAK,EAAE;AAEHC,YAAAA,QAAQ,EAAE;AAFP,WAJF;AAQLC,UAAAA,KAAK,EAAE;AARF,SANb,CAkBI;AAlBJ;AAmBI,QAAA,SAAS,EAAE;AAAE,yBAAe;AAAjB,SAnBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AA0BH,KAxCD,MAyCK,OACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADC;AAMR;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,gBAAgB,EADrB,CADJ;AAKH,CA1DD;;AA4DA,eAAeF,UAAf","sourcesContent":["import React from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\nimport Loader from \"../reusableComponents/Loader\";\r\nconst JirasChart=(props)=>{\r\n\r\n\r\n    function jiraChartCreator() {\r\n        if(props.jiraData.length>0){\r\n            var mappedKeys=props.jiraData.map(obj=>obj.Issue_Key);\r\n            mappedKeys=mappedKeys.reduce((prev, curr) => (prev[curr] = ++prev[curr] || 1, prev), {});\r\n            var dataToChart=[];\r\n            for(var i in mappedKeys)\r\n            {\r\n                if (i==0){\r\n                    dataToChart.push(['Jiras','Count']);\r\n                    dataToChart.push(mappedKeys[i]);\r\n                }\r\n                else {\r\n                    dataToChart.push(mappedKeys[i]);\r\n                }\r\n            }\r\n            return(\r\n                <div>\r\n                    <Chart\r\n                        width={'250px'}\r\n                        height={'200px'}\r\n                        chartType=\"BarChart\"\r\n                        loader={<Loader/>}\r\n                        data={dataToChart}\r\n                        options={{\r\n                            color:'red',\r\n                            title: 'Jira count in presented cycles',\r\n                            chartArea: { width: '40%' },\r\n                            hAxis: {\r\n\r\n                                minValue: 0,\r\n                            },\r\n                            vAxis: {\r\n\r\n                            },\r\n                        }}\r\n                        // For tests\r\n                        rootProps={{ 'data-testid': '1' }}\r\n                    />\r\n                </div>\r\n            )\r\n\r\n        }\r\n        else return (\r\n            <div>\r\n                <Loader/>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return(\r\n        <div >\r\n            {jiraChartCreator()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JirasChart;"]},"metadata":{},"sourceType":"module"}