{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboradBody\\\\CycleGraph.js\";\nimport React from 'react';\nimport img1 from '../assets/Cake.JPG';\nimport d3 from 'react-d3-graph';\n\nvar CycleGraph = function CycleGraph() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    id: \"donut-chart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })));\n};\n\nvar seedData = [{\n  \"label\": \"React\",\n  \"value\": 25,\n  \"link\": \"https://facebook.github.io/react/\"\n}, {\n  \"label\": \"Redux\",\n  \"value\": 25,\n  \"link\": \"https://redux.js.org/\"\n}, {\n  \"label\": \"Vue.js\",\n  \"value\": 25,\n  \"link\": \"https://vuejs.org/\"\n}, {\n  \"label\": \"AngularJS\",\n  \"value\": 25,\n  \"link\": \"https://angularjs.org/\"\n}, {\n  \"label\": \"Meteor\",\n  \"value\": 25,\n  \"link\": \"https://meteorhacks.com/meteor-js-web-framework-for-everyone\"\n}, {\n  \"label\": \"Node.js\",\n  \"value\": 25,\n  \"link\": \"https://nodejs.org/\"\n}]; // Define size & radius of donut pie chart\n\nvar width = 450,\n    height = 450,\n    radius = Math.min(width, height) / 2; // Define arc colours\n\nvar colour = d3.scaleOrdinal(d3.schemeCategory20); // Define arc ranges\n\nvar arcText = d3.scaleOrdinal().range([0, width]); // Determine size of arcs\n\nvar arc = d3.arc().innerRadius(radius - 130).outerRadius(radius - 10); // Create the donut pie chart layout\n\nvar pie = d3.pie().value(function (d) {\n  return d[\"value\"];\n}).sort(null); // Append SVG attributes and append g to the SVG\n\nvar svg = d3.select(\"#donut-chart\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\"); // Define inner circle\n\nsvg.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", 100).attr(\"fill\", \"#fff\"); // Calculate SVG paths and fill in the colours\n\nvar g = svg.selectAll(\".arc\").data(pie(seedData)).enter().append(\"g\").attr(\"class\", \"arc\") // Make each arc clickable\n.on(\"click\", function (d, i) {\n  window.location = seedData[i].link;\n}); // Append the path to each g\n\ng.append(\"path\").attr(\"d\", arc).attr(\"fill\", function (d, i) {\n  return colour(i);\n}); // Append text labels to each arc\n\ng.append(\"text\").attr(\"transform\", function (d) {\n  return \"translate(\" + arc.centroid(d) + \")\";\n}).attr(\"dy\", \".35em\").style(\"text-anchor\", \"middle\").attr(\"fill\", \"#fff\").text(function (d, i) {\n  return seedData[i].label;\n});\ng.selectAll(\".arc text\").call(wrap, arcText.range([0, width])); // Append text to the inner circle\n\nsvg.append(\"text\").attr(\"dy\", \"-0.5em\").style(\"text-anchor\", \"middle\").attr(\"class\", \"inner-circle\").attr(\"fill\", \"#36454f\").text(function (d) {\n  return 'JavaScript';\n});\nsvg.append(\"text\").attr(\"dy\", \"1.0em\").style(\"text-anchor\", \"middle\").attr(\"class\", \"inner-circle\").attr(\"fill\", \"#36454f\").text(function (d) {\n  return 'is lots of fun!';\n}); // Wrap function to handle labels with longer text\n\nfunction wrap(text, width) {\n  text.each(function () {\n    var text = d3.select(this),\n        words = text.text().split(/\\s+/).reverse(),\n        word,\n        line = [],\n        lineNumber = 0,\n        lineHeight = 1.1,\n        // ems\n    y = text.attr(\"y\"),\n        dy = parseFloat(text.attr(\"dy\")),\n        tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n    console.log(\"tspan: \" + tspan);\n\n    while (word = words.pop()) {\n      line.push(word);\n      tspan.text(line.join(\" \"));\n\n      if (tspan.node().getComputedTextLength() > 90) {\n        line.pop();\n        tspan.text(line.join(\" \"));\n        line = [word];\n        tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n      }\n    }\n  });\n}\n\nexport default CycleGraph;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboradBody\\CycleGraph.js"],"names":["React","img1","d3","CycleGraph","seedData","width","height","radius","Math","min","colour","scaleOrdinal","schemeCategory20","arcText","range","arc","innerRadius","outerRadius","pie","value","d","sort","svg","select","attr","append","g","selectAll","data","enter","on","i","window","location","link","centroid","style","text","label","call","wrap","each","words","split","reverse","word","line","lineNumber","lineHeight","y","dy","parseFloat","tspan","console","log","pop","push","join","node","getComputedTextLength"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport img1 from '../assets/Cake.JPG';\r\nimport d3 from 'react-d3-graph';\r\n\r\n\r\nconst CycleGraph=()=>{\r\n    return(\r\n        <div>\r\n            <div className=\"body\">\r\n                <svg id=\"donut-chart\"></svg>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nvar seedData = [{\r\n    \"label\": \"React\",\r\n    \"value\": 25,\r\n    \"link\": \"https://facebook.github.io/react/\"\r\n}, {\r\n    \"label\": \"Redux\",\r\n    \"value\": 25,\r\n    \"link\": \"https://redux.js.org/\"\r\n}, {\r\n    \"label\": \"Vue.js\",\r\n    \"value\": 25,\r\n    \"link\": \"https://vuejs.org/\"\r\n}, {\r\n    \"label\": \"AngularJS\",\r\n    \"value\": 25,\r\n    \"link\": \"https://angularjs.org/\"\r\n}, {\r\n    \"label\": \"Meteor\",\r\n    \"value\": 25,\r\n    \"link\": \"https://meteorhacks.com/meteor-js-web-framework-for-everyone\"\r\n}, {\r\n    \"label\": \"Node.js\",\r\n    \"value\": 25,\r\n    \"link\": \"https://nodejs.org/\"\r\n}];\r\n\r\n// Define size & radius of donut pie chart\r\nvar width = 450,\r\n    height = 450,\r\n    radius = Math.min(width, height) / 2;\r\n\r\n// Define arc colours\r\nvar colour = d3.scaleOrdinal(d3.schemeCategory20);\r\n\r\n// Define arc ranges\r\nvar arcText = d3.scaleOrdinal()\r\n    .range([0, width]);\r\n\r\n// Determine size of arcs\r\nvar arc = d3.arc()\r\n    .innerRadius(radius - 130)\r\n    .outerRadius(radius - 10);\r\n\r\n// Create the donut pie chart layout\r\nvar pie = d3.pie()\r\n    .value(function (d) { return d[\"value\"]; })\r\n    .sort(null);\r\n\r\n// Append SVG attributes and append g to the SVG\r\nvar svg = d3.select(\"#donut-chart\")\r\n    .attr(\"width\", width)\r\n    .attr(\"height\", height)\r\n    .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");\r\n\r\n// Define inner circle\r\nsvg.append(\"circle\")\r\n    .attr(\"cx\", 0)\r\n    .attr(\"cy\", 0)\r\n    .attr(\"r\", 100)\r\n    .attr(\"fill\", \"#fff\") ;\r\n\r\n// Calculate SVG paths and fill in the colours\r\nvar g = svg.selectAll(\".arc\")\r\n    .data(pie(seedData))\r\n    .enter().append(\"g\")\r\n    .attr(\"class\", \"arc\")\r\n\r\n    // Make each arc clickable\r\n    .on(\"click\", function(d, i) {\r\n        window.location = seedData[i].link;\r\n    });\r\n\r\n// Append the path to each g\r\ng.append(\"path\")\r\n    .attr(\"d\", arc)\r\n    .attr(\"fill\", function(d, i) {\r\n        return colour(i);\r\n    });\r\n\r\n// Append text labels to each arc\r\ng.append(\"text\")\r\n    .attr(\"transform\", function(d) {\r\n        return \"translate(\" + arc.centroid(d) + \")\";\r\n    })\r\n    .attr(\"dy\", \".35em\")\r\n    .style(\"text-anchor\", \"middle\")\r\n    .attr(\"fill\", \"#fff\")\r\n    .text(function(d,i) { return seedData[i].label; })\r\n\r\ng.selectAll(\".arc text\").call(wrap, arcText.range([0, width]));\r\n\r\n// Append text to the inner circle\r\nsvg.append(\"text\")\r\n    .attr(\"dy\", \"-0.5em\")\r\n    .style(\"text-anchor\", \"middle\")\r\n    .attr(\"class\", \"inner-circle\")\r\n    .attr(\"fill\", \"#36454f\")\r\n    .text(function(d) { return 'JavaScript'; });\r\n\r\nsvg.append(\"text\")\r\n    .attr(\"dy\", \"1.0em\")\r\n    .style(\"text-anchor\", \"middle\")\r\n    .attr(\"class\", \"inner-circle\")\r\n    .attr(\"fill\", \"#36454f\")\r\n    .text(function(d) { return 'is lots of fun!'; });\r\n\r\n// Wrap function to handle labels with longer text\r\nfunction wrap(text, width) {\r\n    text.each(function() {\r\n        var text = d3.select(this),\r\n            words = text.text().split(/\\s+/).reverse(),\r\n            word,\r\n            line = [],\r\n            lineNumber = 0,\r\n            lineHeight = 1.1, // ems\r\n            y = text.attr(\"y\"),\r\n            dy = parseFloat(text.attr(\"dy\")),\r\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\r\n        console.log(\"tspan: \" + tspan);\r\n        while (word = words.pop()) {\r\n            line.push(word);\r\n            tspan.text(line.join(\" \"));\r\n            if (tspan.node().getComputedTextLength() > 90) {\r\n                line.pop();\r\n                tspan.text(line.join(\" \"));\r\n                line = [word];\r\n                tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport default CycleGraph;"]},"metadata":{},"sourceType":"module"}