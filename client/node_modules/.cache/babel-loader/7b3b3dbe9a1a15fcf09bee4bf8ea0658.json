{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboardBody.js\";\nimport React from 'react';\nimport './mainpage.css';\nimport Progress from './DashboradBody/Progress';\nimport CycleGraph from './DashboradBody/CycleGraph';\nimport CycleTable from './DashboradBody/CycleTable';\nimport OvensView from './DashboradBody/OvensView.js';\nimport axios from 'axios';\n\nvar DashboardBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DashboardBody, _React$Component);\n\n  function DashboardBody() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DashboardBody);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DashboardBody)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      objectToUpdate: null,\n      loading: true,\n      table_data: []\n    };\n\n    _this.getDataFromDb = function () {\n      axios.get('http://localhost:3002/api/cycles', {}).then(function (res) {\n        console.log(res);\n        this.setState({\n          table_data: res.data.result\n        });\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n    };\n\n    _this.updateDB = function (idToUpdate, updateToApply) {\n      axios.post(\"http://localhost:3002/api/updateData\", {\n        id: idToUpdate,\n        update: {\n          message: updateToApply\n        }\n      }).then(function (response) {\n        console.log(response);\n        window.alert(response);\n      }).catch(function (error) {\n        console.log(error);\n        window.alert(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DashboardBody, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromDb();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getDataFromDb, 60000); //timeout currently one minute\n\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"ui container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"UpperBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(CycleTable, {\n        data: this.state.table_data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          width: \"100px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            idToUpdate: e.target.value\n          });\n        },\n        placeholder: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          width: \"100px\"\n        },\n        onChange: function onChange(e) {\n          return _this2.setState({\n            updateToApply: e.target.value\n          });\n        },\n        placeholder: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.updateDB(_this2.state.idToUpdate, _this2.state.updateToApply);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Send Data To Backend\"))), React.createElement(\"div\", {\n        className: \"LowerBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(OvensView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DashboardBody;\n}(React.Component);\n\nexport default DashboardBody;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboardBody.js"],"names":["React","Progress","CycleGraph","CycleTable","OvensView","axios","DashboardBody","state","data","id","message","intervalIsSet","objectToUpdate","loading","table_data","getDataFromDb","get","then","res","console","log","setState","result","catch","error","alert","updateDB","idToUpdate","updateToApply","post","update","response","window","interval","setInterval","clearInterval","width","e","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './mainpage.css'\r\nimport Progress from './DashboradBody/Progress';\r\nimport CycleGraph from './DashboradBody/CycleGraph';\r\nimport CycleTable from './DashboradBody/CycleTable';\r\nimport OvensView from './DashboradBody/OvensView.js';\r\nimport axios from 'axios';\r\n\r\nclass DashboardBody extends React.Component{\r\n\r\n    state = {\r\n        data: [],\r\n        id: 0,\r\n        message: null,\r\n        intervalIsSet: false,\r\n        objectToUpdate: null,\r\n        loading: true,\r\n        table_data:[]\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getDataFromDb();\r\n        if (!this.state.intervalIsSet) {\r\n            let interval = setInterval(this.getDataFromDb, 60000);//timeout currently one minute\r\n            this.setState({ intervalIsSet: interval });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.intervalIsSet) {\r\n            clearInterval(this.state.intervalIsSet);\r\n            this.setState({ intervalIsSet: null });\r\n        }\r\n    }\r\n\r\n    getDataFromDb = () => {\r\n        axios.get('http://localhost:3002/api/cycles',{\r\n        })\r\n            .then(function (res) {\r\n                console.log(res);\r\n                this.setState({table_data:res.data.result});\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                alert(error);\r\n            });\r\n\r\n    };\r\n\r\n    updateDB = (idToUpdate, updateToApply) => {\r\n        axios.post(\"http://localhost:3002/api/updateData\", {\r\n            id: idToUpdate,\r\n            update: { message: updateToApply }\r\n        }).then(function (response) {\r\n            console.log(response);\r\n            window.alert(response);\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                window.alert(error);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        return (\r\n            <div className=\"ui container\">\r\n                <div className=\"UpperBody\">\r\n                    <div className=\"left\">\r\n                        <Progress/>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <CycleTable data={this.state.table_data}/>\r\n                        <input\r\n                            type=\"text\"\r\n                            style={{ width: \"100px\" }}\r\n                            onChange={e => this.setState({ idToUpdate: e.target.value })}\r\n                            placeholder=\"id\"\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            style={{ width: \"100px\" }}\r\n                            onChange={e => this.setState({ updateToApply: e.target.value })}\r\n                            placeholder=\"value\"\r\n                        />\r\n                        <button\r\n                            onClick={() =>\r\n                                this.updateDB(this.state.idToUpdate, this.state.updateToApply)\r\n                            }\r\n                        >\r\n                            Send Data To Backend\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"LowerBody\">\r\n                    <div className=\"bottom\">\r\n                        <OvensView/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DashboardBody;"]},"metadata":{},"sourceType":"module"}