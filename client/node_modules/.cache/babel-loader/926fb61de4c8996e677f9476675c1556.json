{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboardBody.js\";\nimport React from 'react';\nimport './DashboardBody.css';\nimport Progress from './DashboradBody/Progress';\nimport CycleGraph from './DashboradBody/CycleGraph';\nimport CycleTable from './DashboradBody/CycleTable';\nimport OvensView from './DashboradBody/OvensView.js';\nimport axios from 'axios';\nimport Title from './Title';\nimport FilterBar from './DashboradBody/FilterBar';\nimport JirasChart from './DashboradBody/JirasChart';\n\nvar DashboardBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DashboardBody, _React$Component);\n\n  function DashboardBody(props) {\n    var _this;\n\n    _classCallCheck(this, DashboardBody);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashboardBody).call(this, props));\n\n    _this.getDataFromDb = function () {\n      //TODO: my data is an array, so i need to iterate over the array using Array.prototype.map()- to work the right way.\n      axios.get('http://localhost:3002/api/cycles', {}).then(function (res) {\n        _this.setState({\n          table_data: res.data\n        });\n\n        console.log(_this.state.table_data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/executions', {}).then(function (res) {\n        _this.setState({\n          executions_data: res.data\n        });\n\n        console.log(_this.state.executions_data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/chamber', {}).then(function (res) {\n        _this.setState({\n          chamber_data: res.data\n        });\n\n        console.log(_this.state.chamber_data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/ovenUtil', {}).then(function (res) {\n        _this.setState({\n          setups_status: res.data\n        }); //here im returning res instead of res.data\n\n\n        console.log(_this.state.setups_status);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/allOvens', {}).then(function (res) {\n        _this.setState({\n          ovens: res.data\n        }); //here im returning res instead of res.data\n\n\n        console.log(_this.state.ovens);\n\n        _this.Map_OvenData_ByName(); //removeLater\n\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/setupStatusesDeneb', {}).then(function (res) {//this.setState({ovenUtils:res.data});//here im returning res instead of res.data\n        //console.log(this.state.ovenUtils);\n        //this.Map_OvenData_ByName();//removeLater\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get('http://localhost:3002/api/setupStatusesEnif', {}).then(function (res) {\n        _this.setState({\n          ovenUtils: res.data\n        }); //here im returning res instead of res.data\n\n\n        console.log(_this.state.ovenUtils);\n\n        _this.Map_OvenData_ByName(); //removeLater\n\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.toDB = function (e) {\n      console.log(e);\n\n      for (var k in e) {\n        console.log(\"\".concat(k, \" : \").concat(e[k]));\n\n        if (e[k] === 0 || e[k] === \"\") {\n          _this.setState(function (prevState) {\n            return {\n              IsDataToServerOK: !prevState.IsDataToServerOK\n            };\n          });\n\n          return;\n        }\n      }\n\n      axios.post(\"http://localhost:3002/api/updateData\", {\n        id: 1,\n        body: {\n          message: e\n        }\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n        window.alert(error);\n      });\n\n      _this.setState({\n        IsDataToServerOK: true\n      });\n\n      _this.componentDidMount();\n    };\n\n    _this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      objectToUpdate: null,\n      loading: true,\n      table_data: [],\n      executions_data: [],\n      chamber_data: [],\n      setups_status: [],\n      activeIndex: null,\n      DB: null,\n      Oven: null,\n      cycle: null,\n      ovens: [],\n      IsDataToServerOK: true,\n      ovenUtils: []\n    };\n    _this.getDataFromDb = _this.getDataFromDb.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DashboardBody, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromDb();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getDataFromDb, 60000); //timeout currently one minute\n\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    }\n  }, {\n    key: \"Map_OvenData_ByName\",\n    value: function Map_OvenData_ByName() {\n      var mappedData = [];\n      var ovensState = this.state.ovens;\n      var ovensUtil = this.state.ovenUtils;\n\n      if (ovensState.length > 0 && ovensUtil.length > 0) {\n        var ovenArr = ovensState.filter(function (obj) {\n          return obj.oven.toLowerCase().includes(\"ovn\");\n        }); // const ovenUtilArr=[];\n        //\n        // for (var i in ovensUtil){\n        //     var innerObj={};\n        //     for(var objName in ovensUtil[i]){\n        //\n        //         if (objName==='Name'){\n        //             Object.assign(innerObj,{objName:ovensUtil[i][objName].replace(\"e\",\"\")})\n        //             //innerObj.objName=ovensUtil[i][objName].replace(\"e\",\"\");\n        //             ovenUtilArr[i].push(innerObj);\n        //         }\n        //         else {\n        //             Object.assign(innerObj,{objName:ovensUtil[i][objName]})\n        //             //innerObj.objName=ovensUtil[i][objName];\n        //             ovenUtilArr[i].push(innerObj);\n        //         }\n        //\n        //     }\n        //     ovenUtilArr.push(innerObj);\n        // }\n\n        for (var ovenArrIndex in ovenArr) {\n          for (var ovenUtilArrIndex = 0; ovenUtilArrIndex < ovensUtil.length; ovenUtilArrIndex++) {\n            for (var ovnUtilprop in ovensUtil[ovenUtilArrIndex]) {\n              if (ovnUtilprop == \"Name\") {\n                var nameStr = ovensUtil[ovenUtilArrIndex][ovnUtilprop].toLowerCase().replace(/e|rack|-|l|r/g, \"\");\n                var namestr2 = ovenArr[ovenArrIndex][\"oven\"].replace(\"-\", \"\").toLowerCase();\n\n                if (nameStr.includes(namestr2)) {\n                  console.log(\"hi\");\n                  var mappedObj = new Map();\n\n                  for (var tmpKey in ovensUtil[ovenUtilArrIndex]) {\n                    mappedObj.set(tmpKey, ovensUtil[ovenUtilArrIndex][tmpKey]);\n                  }\n\n                  for (var tmpKey_ in ovenArr[ovenArrIndex]) {\n                    mappedObj.set(tmpKey_, ovenArr[ovenArrIndex][tmpKey_]);\n                  }\n\n                  mappedData.push(mappedObj);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return mappedData;\n    }\n  }, {\n    key: \"ConvObjToArr_ovenData\",\n    value: function ConvObjToArr_ovenData() {\n      var mappedOvenData = new Map();\n\n      if (this.state.chamber_data.length > 0 && this.state.setups_status.length > 0) {\n        var chamber = this.state.chamber_data[0];\n        var setups = this.state.setups_status;\n\n        for (var k in chamber) {\n          mappedOvenData.set(k, chamber[k]);\n        }\n\n        var arr = [];\n        var cnt = 0;\n\n        for (var i = 0; i < setups.length; i++) {\n          for (var z in setups[i]) {\n            arr[cnt] = setups[i][z];\n\n            if (cnt === 1) {\n              mappedOvenData.set(arr[1], arr[0]);\n              cnt = 0;\n            } else {\n              cnt++;\n            }\n\n            ;\n          }\n        }\n      }\n\n      return mappedOvenData;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"grid-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"sidebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(FilterBar, {\n        data: this.state.ovens,\n        toDB: function toDB(e) {\n          return _this2.toDB(e);\n        },\n        IsDataToServerOK: this.state.IsDataToServerOK,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"dash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        data: this.state.executions_data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(CycleTable, {\n        data: this.state.table_data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(JirasChart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"ovens\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(OvensView, {\n        data: this.ConvObjToArr_ovenData(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DashboardBody;\n}(React.Component);\n\nexport default DashboardBody;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboardBody.js"],"names":["React","Progress","CycleGraph","CycleTable","OvensView","axios","Title","FilterBar","JirasChart","DashboardBody","props","getDataFromDb","get","then","res","setState","table_data","data","console","log","state","catch","error","executions_data","chamber_data","setups_status","ovens","Map_OvenData_ByName","ovenUtils","toDB","e","k","prevState","IsDataToServerOK","post","id","body","message","response","window","alert","componentDidMount","intervalIsSet","objectToUpdate","loading","activeIndex","DB","Oven","cycle","bind","interval","setInterval","clearInterval","mappedData","ovensState","ovensUtil","length","ovenArr","filter","obj","oven","toLowerCase","includes","ovenArrIndex","ovenUtilArrIndex","ovnUtilprop","nameStr","replace","namestr2","mappedObj","Map","tmpKey","set","tmpKey_","push","mappedOvenData","chamber","setups","arr","cnt","i","z","ConvObjToArr_ovenData","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './DashboardBody.css';\r\nimport Progress from './DashboradBody/Progress';\r\nimport CycleGraph from './DashboradBody/CycleGraph';\r\nimport CycleTable from './DashboradBody/CycleTable';\r\nimport OvensView from './DashboradBody/OvensView.js';\r\nimport axios from 'axios';\r\nimport Title from './Title';\r\nimport FilterBar from './DashboradBody/FilterBar';\r\nimport JirasChart from './DashboradBody/JirasChart';\r\n\r\n\r\nclass DashboardBody extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            id: 0,\r\n            message: null,\r\n            intervalIsSet: false,\r\n            objectToUpdate: null,\r\n            loading: true,\r\n            table_data: [],\r\n            executions_data:[],\r\n            chamber_data:[],\r\n            setups_status:[],\r\n            activeIndex: null,\r\n            DB:null,\r\n            Oven:null,\r\n            cycle:null,\r\n            ovens:[],\r\n            IsDataToServerOK:true,\r\n            ovenUtils:[],\r\n        };\r\n\r\n        this.getDataFromDb = this.getDataFromDb.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getDataFromDb();\r\n        if (!this.state.intervalIsSet) {\r\n            let interval = setInterval(this.getDataFromDb, 60000);//timeout currently one minute\r\n            this.setState({ intervalIsSet: interval });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.intervalIsSet) {\r\n            clearInterval(this.state.intervalIsSet);\r\n            this.setState({ intervalIsSet: null });\r\n        }\r\n    }\r\n\r\n\r\n    getDataFromDb = ()=> {\r\n        //TODO: my data is an array, so i need to iterate over the array using Array.prototype.map()- to work the right way.\r\n\r\n        axios.get('http://localhost:3002/api/cycles', {})\r\n            .then((res) => {\r\n                this.setState({table_data: res.data});\r\n                console.log(this.state.table_data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get('http://localhost:3002/api/executions', {})\r\n            .then((res) => {\r\n                this.setState({executions_data: res.data});\r\n                console.log(this.state.executions_data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get('http://localhost:3002/api/chamber',{})\r\n            .then((res)=>{\r\n                this.setState({chamber_data:res.data});\r\n                console.log(this.state.chamber_data);\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n            axios.get('http://localhost:3002/api/ovenUtil',{})\r\n                .then((res)=>{\r\n                    this.setState({setups_status:res.data});//here im returning res instead of res.data\r\n                    console.log(this.state.setups_status);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        axios.get('http://localhost:3002/api/allOvens',{})\r\n            .then((res)=>{\r\n                this.setState({ovens:res.data});//here im returning res instead of res.data\r\n                console.log(this.state.ovens);\r\n                this.Map_OvenData_ByName();//removeLater\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get('http://localhost:3002/api/setupStatusesDeneb',{})\r\n            .then((res)=>{\r\n                //this.setState({ovenUtils:res.data});//here im returning res instead of res.data\r\n                //console.log(this.state.ovenUtils);\r\n                //this.Map_OvenData_ByName();//removeLater\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        axios.get('http://localhost:3002/api/setupStatusesEnif',{})\r\n            .then((res)=>{\r\n                this.setState({ovenUtils:res.data});//here im returning res instead of res.data\r\n                console.log(this.state.ovenUtils);\r\n                this.Map_OvenData_ByName();//removeLater\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n\r\n    toDB = (e)=>{\r\n      console.log(e);\r\n      for (var k in e){\r\n          console.log(`${k} : ${e[k]}`);\r\n          if (e[k]===0 || e[k]===\"\")\r\n          {\r\n              this.setState(prevState => ({\r\n                  IsDataToServerOK: !prevState.IsDataToServerOK\r\n              }))\r\n              return;\r\n          }\r\n      }\r\n        axios.post(\"http://localhost:3002/api/updateData\", {\r\n            id: 1,\r\n            body: { message: e }\r\n        }).then(function (response) {\r\n            console.log(response);\r\n        })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                window.alert(error);\r\n            });\r\n      this.setState({IsDataToServerOK:true});\r\n      this.componentDidMount();\r\n    };\r\n\r\n    Map_OvenData_ByName(){\r\n        var mappedData=[];\r\n        const ovensState=this.state.ovens;\r\n        const ovensUtil=this.state.ovenUtils;\r\n\r\n        if (ovensState.length>0&&ovensUtil.length>0){\r\n               const ovenArr= ovensState.filter(obj=>obj.oven.toLowerCase().includes(\"ovn\"));\r\n               // const ovenUtilArr=[];\r\n               //\r\n               // for (var i in ovensUtil){\r\n               //     var innerObj={};\r\n               //     for(var objName in ovensUtil[i]){\r\n               //\r\n               //         if (objName==='Name'){\r\n               //             Object.assign(innerObj,{objName:ovensUtil[i][objName].replace(\"e\",\"\")})\r\n               //             //innerObj.objName=ovensUtil[i][objName].replace(\"e\",\"\");\r\n               //             ovenUtilArr[i].push(innerObj);\r\n               //         }\r\n               //         else {\r\n               //             Object.assign(innerObj,{objName:ovensUtil[i][objName]})\r\n               //             //innerObj.objName=ovensUtil[i][objName];\r\n               //             ovenUtilArr[i].push(innerObj);\r\n               //         }\r\n               //\r\n               //     }\r\n               //     ovenUtilArr.push(innerObj);\r\n               // }\r\n\r\n               for(var ovenArrIndex in ovenArr){\r\n\r\n                   for (var ovenUtilArrIndex=0;ovenUtilArrIndex<ovensUtil.length;ovenUtilArrIndex++)\r\n                   {\r\n                       for( var ovnUtilprop in ovensUtil[ovenUtilArrIndex]){\r\n                           if (ovnUtilprop==\"Name\") {\r\n                               var nameStr = ovensUtil[ovenUtilArrIndex][ovnUtilprop].toLowerCase().replace(/e|rack|-|l|r/g, \"\");\r\n                               var namestr2 = ovenArr[ovenArrIndex][\"oven\"].replace(\"-\", \"\").toLowerCase();\r\n                               if (nameStr.includes(namestr2)) {\r\n                                   console.log(\"hi\");\r\n                                   var mappedObj=new Map();\r\n                                   for (var tmpKey in ovensUtil[ovenUtilArrIndex]){\r\n                                       mappedObj.set(tmpKey,ovensUtil[ovenUtilArrIndex][tmpKey])\r\n                                   }\r\n                                   for (var tmpKey_ in ovenArr[ovenArrIndex])\r\n                                   {\r\n                                       mappedObj.set(tmpKey_,ovenArr[ovenArrIndex][tmpKey_])\r\n                                   }\r\n                                   mappedData.push(mappedObj);\r\n                               }\r\n                           }\r\n                       }\r\n\r\n                   }\r\n\r\n               }\r\n        }\r\n        return mappedData\r\n    }\r\n\r\n    ConvObjToArr_ovenData(){\r\n        var mappedOvenData=new Map();\r\n        if (this.state.chamber_data.length>0 && this.state.setups_status.length>0){\r\n            const chamber=this.state.chamber_data[0];\r\n            const setups=this.state.setups_status;\r\n            for(var k in chamber )\r\n            {\r\n                mappedOvenData.set(k,chamber[k])\r\n            }\r\n            let arr=[];\r\n            let cnt=0;\r\n            for(let i=0;i<setups.length;i++)\r\n            {\r\n\r\n                for(var z in setups[i] ){\r\n                    arr[cnt]=setups[i][z];\r\n                    if(cnt===1){\r\n                        mappedOvenData.set(arr[1],arr[0]);\r\n                        cnt=0;\r\n                    }\r\n                    else{cnt++};\r\n                }\r\n            }\r\n        }\r\n        return mappedOvenData;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"grid-container\">\r\n                <div className=\"header\">\r\n                    <div className=\"\">\r\n                        <h1><Title/></h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sidebar\">\r\n                   <FilterBar data={this.state.ovens} toDB={(e)=>this.toDB(e)} IsDataToServerOK={this.state.IsDataToServerOK}/>\r\n                </div>\r\n                <div className=\"dash\">\r\n                        <div className=\"status\">\r\n                            <Progress data={this.state.executions_data}/>\r\n                        </div>\r\n                        <div className=\"table\">\r\n                            <CycleTable data={this.state.table_data}/>\r\n                            {/*{postView}*/}\r\n                        </div>\r\n                        <div className=\"stats\">\r\n\r\n                            <JirasChart/>\r\n                        </div>\r\n\r\n                        <div className=\"ovens\">\r\n                            <OvensView data={this.ConvObjToArr_ovenData()} />\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DashboardBody;"]},"metadata":{},"sourceType":"module"}