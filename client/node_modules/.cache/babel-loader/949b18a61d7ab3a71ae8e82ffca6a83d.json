{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nvar utils = require('../utils');\n\nvar Candle = require('./Candle');\n\nvar Wick = require('./Wick');\n\nmodule.exports = React.createClass({\n  displayName: 'CandleStickContainer',\n  propTypes: {\n    candle_x: React.PropTypes.number,\n    candle_y: React.PropTypes.number,\n    className: React.PropTypes.string,\n    candleFill: React.PropTypes.string,\n    candleHeight: React.PropTypes.number,\n    candleWidth: React.PropTypes.number,\n    wick_x1: React.PropTypes.number,\n    wick_x2: React.PropTypes.number,\n    wick_y1: React.PropTypes.number,\n    wick_y2: React.PropTypes.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      className: 'rd3-candlestick-container'\n    };\n  },\n  getInitialState: function getInitialState() {\n    // state for animation usage\n    return {\n      candleWidth: this.props.candleWidth,\n      candleFill: this.props.candleFill\n    };\n  },\n  render: function render() {\n    var props = this.props;\n    var state = this.state; // animation controller\n\n    var handleMouseOver, handleMouseLeave;\n\n    if (props.hoverAnimation) {\n      handleMouseOver = this._animateCandle;\n      handleMouseLeave = this._restoreCandle;\n    } else {\n      handleMouseOver = handleMouseLeave = null;\n    }\n\n    return React.createElement(\"g\", {\n      className: props.className\n    }, React.createElement(Wick, {\n      wick_x1: props.wick_x1,\n      wick_x2: props.wick_x2,\n      wick_y1: props.wick_y1,\n      wick_y2: props.wick_y2\n    }), React.createElement(Candle, {\n      candleFill: state.candleFill,\n      candleWidth: state.candleWidth,\n      candle_x: props.candle_x - (state.candleWidth - props.candleWidth) / 2,\n      candle_y: props.candle_y,\n      candleHeight: props.candleHeight,\n      handleMouseOver: handleMouseOver,\n      handleMouseLeave: handleMouseLeave\n    }));\n  },\n  _animateCandle: function _animateCandle() {\n    this.setState({\n      candleWidth: this.props.candleWidth * 1.5,\n      candleFill: utils.shade(this.props.candleFill, -0.2)\n    });\n  },\n  _restoreCandle: function _restoreCandle() {\n    this.setState({\n      candleWidth: this.props.candleWidth,\n      candleFill: this.props.candleFill\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"script"}