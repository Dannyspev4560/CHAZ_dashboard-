{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboradBody\\\\CycleTable.js\";\nimport React from 'react';\nimport './CycleTable.css';\nimport Loader from '../reusableComponents/Loader';\nimport { Progress } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction totalValues(data, key) {\n  var totalVal = 0;\n\n  for (var i = 0; i <= data.length; i++) {\n    for (var k in data[i]) {\n      if (k == key) {\n        totalVal += data[i][k];\n      }\n    }\n  }\n\n  return totalVal;\n}\n\nfunction getValuePrecentage(value, cycleVals) {\n  return (value / (cycleVals.Ex_Running + cycleVals.Ex_Completed + cycleVals.Ex_TimeOut) * 100).toFixed(0);\n}\n\nfunction showPrecentage(text, val) {\n  return val > 0 ? text + val + \"%\" : \"\";\n}\n\nvar CycleTable = function CycleTable(props) {\n  var view = null;\n  var rows = props.data.map(function (row) {\n    return React.createElement(\"tr\", {\n      className: \"tableContent\",\n      key: row.ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, row.ID), React.createElement(\"th\", {\n      className: \"wrapLongWord\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, row.Description), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      multi: true,\n      style: {\n        width: '300px',\n        margin: '0.2em',\n        height: '1.8em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      bar: true,\n      striped: true,\n      value: getValuePrecentage(row.Ex_Running, row),\n      color: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, showPrecentage('Running', getValuePrecentage(row.Ex_Running, row))), React.createElement(Progress, {\n      bar: true,\n      animated: true,\n      danger: true,\n      color: \"warning\",\n      value: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"completed\"), React.createElement(Progress, {\n      bar: true,\n      color: \"danger\",\n      value: \"25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"failed\"), React.createElement(Progress, {\n      bar: true,\n      color: \"info\",\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Pending\"))));\n  });\n\n  if (props.data.length > 0) {\n    view = React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Cycle ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Cycle Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Ex Running\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, rows), React.createElement(\"tfoot\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \", React.createElement(Progress, {\n      multi: true,\n      style: {\n        width: '300px',\n        margin: '0.2em',\n        height: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Progress, {\n      bar: true,\n      striped: true,\n      value: \"45\",\n      color: \"success\",\n      style: {\n        fontSize: '1.5em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"running\"), React.createElement(Progress, {\n      bar: true,\n      animated: true,\n      danger: true,\n      color: \"warning\",\n      value: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"completed\"), React.createElement(Progress, {\n      bar: true,\n      color: \"danger\",\n      value: \"25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"failed\"), React.createElement(Progress, {\n      bar: true,\n      color: \"info\",\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Pending\"))))));\n  } else {\n    view = React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, view != null ? React.createElement(\"div\", {\n    className: \"ui fixed table\",\n    style: {\n      fontWeight: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, view) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })));\n};\n\nexport default CycleTable;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboradBody\\CycleTable.js"],"names":["React","Loader","Progress","totalValues","data","key","totalVal","i","length","k","getValuePrecentage","value","cycleVals","Ex_Running","Ex_Completed","Ex_TimeOut","toFixed","showPrecentage","text","val","CycleTable","props","view","rows","map","row","ID","Description","width","margin","height","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './CycleTable.css';\r\nimport Loader from '../reusableComponents/Loader';\r\nimport { Progress } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction totalValues(data,key) {\r\n    let totalVal=0;\r\n    for (var i=0;i<=data.length;i++) {\r\n        for (var k in data[i]) {\r\n            if (k == key) {\r\n                totalVal += data[i][k];\r\n            }\r\n        }\r\n    }\r\n    return totalVal;\r\n}\r\nfunction getValuePrecentage(value,cycleVals){\r\n    return ((value/(cycleVals.Ex_Running + cycleVals.Ex_Completed + cycleVals.Ex_TimeOut))*100).toFixed(0)\r\n}\r\nfunction showPrecentage(text,val){\r\n    return val>0 ? (text+ val+ \"%\") : \"\"\r\n}\r\n\r\n\r\nconst CycleTable=(props)=>{\r\n\r\n\r\n    let view=null;\r\n    let rows= props.data.map((row)=>{return(\r\n        <tr className=\"tableContent\" key={row.ID}>\r\n            <th>{row.ID}</th>\r\n            <th className=\"wrapLongWord\">{row.Description}</th>\r\n            <th>\r\n                <Progress multi style={{width:'300px',margin:'0.2em',height:'1.8em'}}>\r\n                    <Progress bar striped value={getValuePrecentage(row.Ex_Running,row)} color=\"success\">{showPrecentage('Running',getValuePrecentage(row.Ex_Running,row))}</Progress>\r\n                    <Progress bar animated danger color=\"warning\" value=\"30\">completed</Progress>\r\n                    <Progress bar color=\"danger\" value=\"25\">failed</Progress>\r\n                    <Progress bar color=\"info\" value=\"0\">Pending</Progress>\r\n                </Progress>\r\n            </th>\r\n\r\n        </tr>)\r\n    });\r\n\r\n    if (props.data.length>0)\r\n    {\r\n\r\n        view =\r\n            <table >\r\n            <thead >\r\n            <tr >\r\n                <th>Cycle ID</th>\r\n                <th>Cycle Name</th>\r\n                <th>Ex Running</th>\r\n\r\n            </tr>\r\n            </thead>\r\n            <tbody >\r\n            {rows}\r\n            </tbody>\r\n            <tfoot>\r\n            <tr >\r\n                <th></th>\r\n                <th></th>\r\n                <th> <Progress multi style={{width:'300px',margin:'0.2em',height:'2em'}}>\r\n                    <Progress bar striped value=\"45\" color=\"success\" style={{fontSize:'1.5em'}}>running</Progress>\r\n                    <Progress bar animated danger color=\"warning\" value=\"30\">completed</Progress>\r\n                    <Progress bar color=\"danger\" value=\"25\">failed</Progress>\r\n                    <Progress bar color=\"info\" value=\"0\">Pending</Progress>\r\n                </Progress>\r\n                </th>\r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n\r\n    }\r\n    else{\r\n        view=<Loader/>\r\n    }\r\n    return(\r\n        <div>\r\n            {view!=null ?(\r\n                <div className=\"ui fixed table\" style={{fontWeight:'none'}}>\r\n                    {view}\r\n                </div>\r\n            ):(\r\n                <div>\r\n                    <Loader/>\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CycleTable;"]},"metadata":{},"sourceType":"module"}