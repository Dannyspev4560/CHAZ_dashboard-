{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\7316093\\\\CHAZ_Dash\\\\fullstack_app\\\\client\\\\src\\\\DashboradBody\\\\Progress.js\";\nimport React from 'react';\nimport './Progress.css';\n\nfunction progressCalc(data) {\n  if (data.length > 0) {\n    var array = [];\n    var runningAndCompleted = 0;\n    var failed = 0;\n\n    for (var i = 0; i <= data.length; i++) {\n      for (var k in data[i]) {\n        if (k == 'Status') {\n          if (data[i][k] == 'TimeOut' || data[i][k] == 'Completed' || data[i][k] == 'Running') {\n            runningAndCompleted++;\n          }\n        }\n      }\n    }\n\n    for (var z = 0; z <= data.length; z++) {\n      for (var b in data[z]) {\n        if (b == 'Result') {\n          if (data[z][b] == 'FailWithException') {\n            failed++;\n          }\n        }\n      }\n\n      array[0] = Math.round(runningAndCompleted / data.length * 100);\n      array[1] = failed;\n    }\n  } else return 0;\n}\n\nvar Progress = function Progress(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui two column centered grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Progress:\", progressCalc(props.data)[0], \" %\")), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Failed: \", progressCalc(props.data)[1])))), React.createElement(\"div\", {\n    className: \"containerStatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui two column centered grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui segment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"PassRate:\")))));\n};\n\nexport default Progress;","map":{"version":3,"sources":["C:\\Users\\7316093\\CHAZ_Dash\\fullstack_app\\client\\src\\DashboradBody\\Progress.js"],"names":["React","progressCalc","data","length","array","runningAndCompleted","failed","i","k","z","b","Math","round","Progress","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;AAIC,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,MAAIA,IAAI,CAACC,MAAL,GAAY,CAAhB,EAAkB;AAClB,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,mBAAmB,GAAG,CAA1B;AACA,QAAIC,MAAM,GAAG,CAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,IAAI,CAACC,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACnC,WAAK,IAAIC,CAAT,IAAcN,IAAI,CAACK,CAAD,CAAlB,EAAuB;AACnB,YAAIC,CAAC,IAAI,QAAT,EAAmB;AACf,cAAIN,IAAI,CAACK,CAAD,CAAJ,CAAQC,CAAR,KAAc,SAAd,IAA2BN,IAAI,CAACK,CAAD,CAAJ,CAAQC,CAAR,KAAc,WAAzC,IAAwDN,IAAI,CAACK,CAAD,CAAJ,CAAQC,CAAR,KAAc,SAA1E,EAAqF;AACjFH,YAAAA,mBAAmB;AACtB;AACJ;AACJ;AACJ;;AACD,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,IAAI,CAACC,MAA1B,EAAkCM,CAAC,EAAnC,EAAuC;AACnC,WAAK,IAAIC,CAAT,IAAcR,IAAI,CAACO,CAAD,CAAlB,EAAuB;AACnB,YAAIC,CAAC,IAAI,QAAT,EAAmB;AACf,cAAIR,IAAI,CAACO,CAAD,CAAJ,CAAQC,CAAR,KAAc,mBAAlB,EAAuC;AACnCJ,YAAAA,MAAM;AACT;AACJ;AACJ;;AAEDF,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWO,IAAI,CAACC,KAAL,CAAYP,mBAAmB,GAAGH,IAAI,CAACC,MAA5B,GAAsC,GAAjD,CAAX;AACAC,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWE,MAAX;AACH;AACA,GAzBD,MA0BK,OAAO,CAAP;AACR;;AACG,IAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAGxB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsCb,YAAY,CAACa,KAAK,CAACZ,IAAP,CAAZ,CAAyB,CAAzB,CAAtC,OADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCD,YAAY,CAACa,KAAK,CAACZ,IAAP,CAAZ,CAAyB,CAAzB,CAArC,CADJ,CAJJ,CADJ,CADJ,EAWI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,CADJ,CAXJ,CADJ;AAqBH,CAxBD;;AA2BL,eAAeW,QAAf","sourcesContent":["import React from 'react';\r\nimport './Progress.css';\r\n\r\n\r\n\r\n function progressCalc(data) {\r\n     if (data.length>0){\r\n     let array = [];\r\n     let runningAndCompleted = 0;\r\n     let failed = 0;\r\n     for (var i = 0; i <= data.length; i++) {\r\n         for (var k in data[i]) {\r\n             if (k == 'Status') {\r\n                 if (data[i][k] == 'TimeOut' || data[i][k] == 'Completed' || data[i][k] == 'Running') {\r\n                     runningAndCompleted++;\r\n                 }\r\n             }\r\n         }\r\n     }\r\n     for (var z = 0; z <= data.length; z++) {\r\n         for (var b in data[z]) {\r\n             if (b == 'Result') {\r\n                 if (data[z][b] == 'FailWithException') {\r\n                     failed ++;\r\n                 }\r\n             }\r\n         }\r\n\r\n         array[0] = Math.round((runningAndCompleted / data.length) * 100);\r\n         array[1] = failed;\r\n     }\r\n     }\r\n     else return 0;\r\n }\r\n     const Progress = (props) => {\r\n\r\n\r\n         return (\r\n             <div>\r\n                 <div className=\"containerStatus\">\r\n                     <div className=\"ui two column centered grid\">\r\n                         <div className=\"column\">\r\n                             <div className=\"ui segment\">Progress:{progressCalc(props.data)[0]} %</div>\r\n                         </div>\r\n                         <div className=\"column\">\r\n                             <div className=\"ui segment\">Failed: {progressCalc(props.data)[1]}</div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n                 <div className=\"containerStatus\">\r\n                     <div className=\"ui two column centered grid\">\r\n                         <div className=\"column\">\r\n                             <div className=\"ui segment\">PassRate:</div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n         )\r\n     }\r\n\r\n\r\nexport default Progress;"]},"metadata":{},"sourceType":"module"}