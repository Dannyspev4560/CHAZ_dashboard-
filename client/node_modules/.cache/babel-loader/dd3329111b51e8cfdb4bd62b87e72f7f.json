{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nvar VoronoiCircleContainer = require('./VoronoiCircleContainer');\n\nvar Line = require('./Line');\n\nmodule.exports = React.createClass({\n  displayName: 'DataSeries',\n  propTypes: {\n    color: React.PropTypes.func,\n    colorAccessor: React.PropTypes.func,\n    data: React.PropTypes.array,\n    interpolationType: React.PropTypes.string,\n    xAccessor: React.PropTypes.func,\n    yAccessor: React.PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      data: [],\n      xAccessor: function xAccessor(d) {\n        return d.x;\n      },\n      yAccessor: function yAccessor(d) {\n        return d.y;\n      },\n      interpolationType: 'linear'\n    };\n  },\n  _isDate: function _isDate(d, accessor) {\n    return Object.prototype.toString.call(accessor(d)) === '[object Date]';\n  },\n  render: function render() {\n    var props = this.props;\n    var xScale = props.xScale;\n    var yScale = props.yScale;\n    var xAccessor = props.xAccessor,\n        yAccessor = props.yAccessor;\n    var interpolatePath = d3.svg.line().y(function (d) {\n      return props.yScale(yAccessor(d));\n    }).interpolate(props.interpolationType);\n\n    if (this._isDate(props.data[0].values[0], xAccessor)) {\n      interpolatePath.x(function (d) {\n        return props.xScale(props.xAccessor(d).getTime());\n      });\n    } else {\n      interpolatePath.x(function (d) {\n        return props.xScale(props.xAccessor(d));\n      });\n    }\n\n    var lines = props.data.map(function (series, idx) {\n      return React.createElement(Line, {\n        path: interpolatePath(series.values),\n        stroke: props.colors(props.colorAccessor(series, idx)),\n        strokeWidth: series.strokeWidth,\n        strokeDashArray: series.strokeDashArray,\n        seriesName: series.name,\n        key: idx\n      });\n    });\n    var voronoi = d3.geom.voronoi().x(function (d) {\n      return xScale(d.coord.x);\n    }).y(function (d) {\n      return yScale(d.coord.y);\n    }).clipExtent([[0, 0], [props.width, props.height]]);\n    var cx, cy, circleFill;\n    var regions = voronoi(props.value).map(function (vnode, idx) {\n      var point = vnode.point.coord;\n\n      if (Object.prototype.toString.call(xAccessor(point)) === '[object Date]') {\n        cx = props.xScale(xAccessor(point).getTime());\n      } else {\n        cx = props.xScale(xAccessor(point));\n      }\n\n      if (Object.prototype.toString.call(yAccessor(point)) === '[object Date]') {\n        cy = props.yScale(yAccessor(point).getTime());\n      } else {\n        cy = props.yScale(yAccessor(point));\n      }\n\n      circleFill = props.colors(props.colorAccessor(vnode, vnode.point.seriesIndex));\n      return React.createElement(VoronoiCircleContainer, {\n        key: idx,\n        circleFill: circleFill,\n        vnode: vnode,\n        cx: cx,\n        cy: cy,\n        circleRadius: props.circleRadius\n      });\n    }.bind(this));\n    return React.createElement(\"g\", null, React.createElement(\"g\", null, regions), React.createElement(\"g\", null, lines));\n  }\n});","map":null,"metadata":{},"sourceType":"script"}