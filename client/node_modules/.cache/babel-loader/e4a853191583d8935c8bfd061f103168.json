{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar d3 = require('d3');\n\nmodule.exports = React.createClass({\n  displayName: 'AxisLine',\n  propTypes: {\n    scale: React.PropTypes.func.isRequired,\n    innerTickSize: React.PropTypes.number,\n    outerTickSize: React.PropTypes.number,\n    tickPadding: React.PropTypes.number,\n    tickArguments: React.PropTypes.array,\n    fill: React.PropTypes.string,\n    stroke: React.PropTypes.string\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      innerTickSize: 6,\n      outerTickSize: 6,\n      tickPadding: 3,\n      fill: 'none',\n      tickArguments: [10],\n      tickValues: null,\n      tickFormat: null\n    };\n  },\n  _d3_scaleExtent: function _d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  },\n  _d3_scaleRange: function _d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : this._d3_scaleExtent(scale.range());\n  },\n  render: function render() {\n    var props = this.props;\n    var sign = props.orient === \"top\" || props.orient === \"left\" ? -1 : 1;\n\n    var range = this._d3_scaleRange(props.scale);\n\n    var d;\n\n    if (props.orient === \"bottom\" || props.orient === \"top\") {\n      d = \"M\" + range[0] + \",\" + sign * props.outerTickSize + \"V0H\" + range[1] + \"V\" + sign * props.outerTickSize;\n    } else {\n      d = \"M\" + sign * props.outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * props.outerTickSize;\n    }\n\n    return React.createElement(\"path\", {\n      className: \"domain\",\n      d: d,\n      style: {\n        'shapeRendering': 'crispEdges'\n      },\n      fill: props.fill,\n      stroke: props.stroke,\n      strokeWidth: props.strokeWidth\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"script"}